version: '3.9'

services:
  server1:
    build:
      context: .
      dockerfile: src/server/Dockerfile
    container_name: server1
    #command: ["./bin/ChatServer","0.0.0.0","6000"]
    ports:
      - "6000:6000"
    stdin_open: true
    depends_on:
      - redis
      - mysql
    networks:
      - chatnet

  server2:
    build:
      context: .
      dockerfile: src/server/Dockerfile
    container_name: server2
    #command: ["./bin/ChatServer","0.0.0.0","6002"]
    ports:
      - "6002:6002"
    stdin_open: true
    depends_on:
      - redis
      - mysql
    networks:
      - chatnet

  server3:
    build:
      context: .
      dockerfile: src/server/Dockerfile
    container_name: server3
    #command: ["./bin/ChatServer","0.0.0.0","6004"]
    ports:
      - "6004:6004"
    stdin_open: true
    depends_on:
      - redis
      - mysql
    networks:
      - chatnet
  
  client:
    build:
      context: .
      dockerfile: src/client/Dockerfile
    container_name: client
    stdin_open: true
    tty: true
    depends_on: 
      - nginx
    networks:
      - chatnet

  redis:
    image: redis:7.2
    container_name: redis
    restart: always
    ports:
      - "6380:6379"
    networks:
      - chatnet

  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: chat
    ports:
      - "3307:3306"
    volumes:
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - chatnet

  nginx: 
    image: nginx:1.25
    container_name: nginx
    ports:
      - "8001:8000"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on: [server1,server2,server3]
    restart: always
    networks:
      - chatnet

networks:
  chatnet:
    driver: bridge    